#zlim = c(0,15)
)
}
plotit(filter(data_all, num_slots == 1))
plotit(data_singleton)
plotit(data_p1)
plotit(data_p4)
plotit(data_r)
library(tidyverse)
library(scatterplot3d)
data_all <-  read_csv("../../../reports/runtimes_big.csv", col_types = cols(num_students = col_factor(), num_projects = col_factor(), proj_pref_type = col_factor()))
data_singleton <- data_all %>% filter(proj_pref_type == "singleton")
data_p1 <- data_all %>% filter(proj_pref_type == "linear_perturbed_1")
data_p4 <- data_all %>% filter(proj_pref_type == "linear_perturbed_4")
data_r <- data_all %>% filter(proj_pref_type == "random")
plotit <- function(data) {
#colors <- c("#003f5c", "#58508d", "#bc5090", "#ff6361", "#ffa600")
colors = c("#003f5c" ,"#7a5195" ,"#ef5675" ,"#ffa600")
shapes <- c(15, 16, 17, 18)
scatterplot3d(
x = data$num_projects,
y = data$num_students,
z = log(data$duration_ms/1000),
pch = shapes[factor(data$num_slots)],
color = colors[factor(data$proj_pref_type)],
#zlim = c(0,15)
)
}
plotit(filter(data_all, num_slots == 1))
plotit(data_singleton)
plotit(data_p1)
plotit(data_p4)
plotit(data_r)
library(tidyverse)
library(scatterplot3d)
data_all <-  read_csv("../../../reports/runtimes_big.csv", col_types = cols(num_students = col_factor(), num_projects = col_factor(), proj_pref_type = col_factor()))
data_singleton <- data_all %>% filter(proj_pref_type == "singleton")
data_p1 <- data_all %>% filter(proj_pref_type == "linear_perturbed_1")
data_p4 <- data_all %>% filter(proj_pref_type == "linear_perturbed_4")
data_r <- data_all %>% filter(proj_pref_type == "random")
plotit <- function(data) {
#colors <- c("#003f5c", "#58508d", "#bc5090", "#ff6361", "#ffa600")
colors = c("#003f5c" ,"#7a5195" ,"#ef5675" ,"#ffa600")
shapes <- c(15, 16, 17, 18)
scatterplot3d(
x = data$num_projects,
y = data$num_students,
z = log(data$duration_ms),
pch = shapes[factor(data$num_slots)],
color = colors[factor(data$proj_pref_type)],
#zlim = c(0,15)
)
}
plotit(filter(data_all, num_slots == 1))
plotit(data_singleton)
plotit(data_p1)
plotit(data_p4)
plotit(data_r)
library(tidyverse)
data_all <- read_csv("../../../reports/runtimes_big.csv", col_types = cols(num_students = col_factor(), num_projects = col_factor(), proj_pref_type = col_factor()))
#unique(data_all$num_students)
for (pref_dist in levels(data_all$proj_pref_type)) {
data_filtered <- data_all %>% filter(num_students == 860 & proj_pref_type == pref_dist)
#print(data_filtered)
plot <- ggplot(data_filtered, aes(x = factor(num_slots), y = (duration_ms)), group = num_projects) +
geom_boxplot() +
geom_jitter(position=position_jitter(0.2)) +
facet_wrap(vars(num_projects)) +
ylim(0, 20000) +
labs(title = pref_dist)
print(plot)
}
library(tidyverse)
data_all <- read_csv("../../../reports/runtimes_big.csv", col_types = cols(num_students = col_factor(), num_projects = col_factor(), proj_pref_type = col_factor()))
#unique(data_all$num_students)
for (pref_dist in levels(data_all$proj_pref_type)) {
data_filtered <- data_all %>% filter(num_students == 860 & proj_pref_type == pref_dist)
#print(data_filtered)
plot <- ggplot(data_filtered, aes(x = factor(num_slots), y = (duration_ms)), group = num_projects) +
geom_boxplot() +
geom_jitter(position=position_jitter(0.2)) +
facet_wrap(vars(num_projects)) +
ylim(0, 20000) +
labs(title = pref_dist)
print(plot)
}
library(tidyverse)
library(scatterplot3d)
data_all <-  read_csv("../../../reports/runtimes_big.csv", col_types = cols(num_students = col_factor(), num_projects = col_factor(), proj_pref_type = col_factor()), mechanism = col_factor())
library(tidyverse)
library(scatterplot3d)
data_all <-  read_csv("../../../reports/runtimes_big.csv", col_types = cols(num_students = col_factor(), num_projects = col_factor(), proj_pref_type = col_factor(), mechanism = col_factor())
data_singleton <- data_all %>% filter(proj_pref_type == "singleton")
library(tidyverse)
library(scatterplot3d)
data_all <-  read_csv("../../../reports/runtimes_big.csv", col_types = cols(num_students = col_factor(), num_projects = col_factor(), proj_pref_type = col_factor(), mechanism = col_factor()))
data_singleton <- data_all %>% filter(proj_pref_type == "singleton")
data_p1 <- data_all %>% filter(proj_pref_type == "linear_perturbed_1")
data_p4 <- data_all %>% filter(proj_pref_type == "linear_perturbed_4")
data_r <- data_all %>% filter(proj_pref_type == "random")
plotit <- function(data) {
#colors <- c("#003f5c", "#58508d", "#bc5090", "#ff6361", "#ffa600")
colors = c("#003f5c" ,"#7a5195" ,"#ef5675" ,"#ffa600")
shapes <- c(15, 16, 17, 18)
scatterplot3d(
x = data$num_projects,
y = data$num_students,
z = log(data$duration_ms),
pch = shapes[factor(data$num_slots)],
color = colors[factor(data$mechanism)],
#zlim = c(0,15)
)
}
plotit(filter(data_all, num_slots == 1))
plotit(data_singleton)
plotit(data_p1)
plotit(data_p4)
plotit(data_r)
library(tidyverse)
library(scatterplot3d)
data_all <-  read_csv("../../../reports/runtimes_big.csv", col_types = cols(num_students = col_factor(), num_projects = col_factor(), proj_pref_type = col_factor(), mechanism = col_factor()))
data_singleton <- data_all %>% filter(proj_pref_type == "singleton")
data_p1 <- data_all %>% filter(proj_pref_type == "linear_perturbed_1")
data_p4 <- data_all %>% filter(proj_pref_type == "linear_perturbed_4")
data_r <- data_all %>% filter(proj_pref_type == "random")
plotit <- function(data) {
#colors <- c("#003f5c", "#58508d", "#bc5090", "#ff6361", "#ffa600")
colors = c("#003f5c" ,"#7a5195" ,"#ef5675" ,"#ffa600")
colors_mechanism = c("#7a5195", "#ffa600")
shapes <- c(15, 16, 17, 18)
scatterplot3d(
x = data$num_projects,
y = data$num_students,
z = log(data$duration_ms),
pch = shapes[factor(data$num_slots)],
color = colors_mechanism[factor(data$mechanism)]
#,zlim = c(0,15)
)
}
plotit(filter(data_all, num_slots == 1))
plotit(data_singleton)
plotit(data_p1)
plotit(data_p4)
plotit(data_r)
library(tidyverse)
library(scatterplot3d)
data_all <-  read_csv("../../../reports/runtimes_big.csv", col_types = cols(num_students = col_factor(), num_projects = col_factor(), proj_pref_type = col_factor(), mechanism = col_factor()))
data_singleton <- data_all %>% filter(proj_pref_type == "singleton")
data_p1 <- data_all %>% filter(proj_pref_type == "linear_perturbed_1")
data_p4 <- data_all %>% filter(proj_pref_type == "linear_perturbed_4")
data_r <- data_all %>% filter(proj_pref_type == "random")
plotit <- function(data) {
#colors <- c("#003f5c", "#58508d", "#bc5090", "#ff6361", "#ffa600")
colors = c("#003f5c" ,"#7a5195" ,"#ef5675" ,"#ffa600")
colors_mechanism = c("#7a5195", "#ffa600")
shapes <- c(15, 16, 17, 18)
scatterplot3d(
x = data$num_projects,
y = data$num_students,
z = log(data$duration_ms),
pch = shapes[factor(data$proj_pref_type)],
color = colors_mechanism[factor(data$mechanism)]
#,zlim = c(0,15)
)
}
plotit(filter(data_all, num_slots == 1))
plotit(data_singleton)
plotit(data_p1)
plotit(data_p4)
plotit(data_r)
library(plotly)
install.packages("plotly")
library(plotly)
library(tidyverse)
data_all <- read_csv("../../../reports/runtimes_big.csv", col_types = cols(num_students = col_factor(), num_projects = col_factor(), proj_pref_type = col_factor()))
#unique(data_all$num_students)
for (pref_dist in levels(data_all$proj_pref_type)) {
data_filtered <- data_all %>% filter(num_students == 860 & proj_pref_type == pref_dist)
#print(data_filtered)
plot <- ggplot(data_filtered, aes(x = factor(num_slots), y = (duration_ms)), group = num_projects) +
geom_boxplot() +
geom_jitter(position=position_jitter(0.2)) +
facet_wrap(vars(num_projects)) +
ylim(0, 20000) +
labs(title = pref_dist)
print(plot)
}
library(tidyverse)
data_all <- read_csv("../../../reports/runtimes_big.csv", col_types = cols(num_students = col_factor(), num_projects = col_factor(), proj_pref_type = col_factor()))
#unique(data_all$num_students)
for (pref_dist in levels(data_all$proj_pref_type)) {
data_filtered <- data_all %>% filter(num_students == 860 & proj_pref_type == pref_dist)
#print(data_filtered)
plot <- ggplot(data_filtered, aes(x = factor(num_slots), y = (duration_ms)), group = num_projects) +
geom_boxplot() +
geom_jitter(position=position_jitter(0.2)) +
facet_wrap(vars(num_projects)) +
ylim(0, 20000) +
labs(title = pref_dist)
print(plot)
}
install.packages("plotly")
data_all <-  read_csv("../../../reports/runtimes_big.csv", col_types = cols(num_students = col_factor(), num_projects = col_factor(), proj_pref_type = col_factor(), mechanism = col_factor()))
data_singleton <- data_all %>% filter(proj_pref_type == "singleton")
data_p1 <- data_all %>% filter(proj_pref_type == "linear_perturbed_1")
data_p4 <- data_all %>% filter(proj_pref_type == "linear_perturbed_4")
data_r <- data_all %>% filter(proj_pref_type == "random")
library(tidyverse)
library(scatterplot3d)
plotit <- function(data) {
#colors <- c("#003f5c", "#58508d", "#bc5090", "#ff6361", "#ffa600")
colors = c("#003f5c" ,"#7a5195" ,"#ef5675" ,"#ffa600")
colors_mechanism = c("#7a5195", "#ffa600")
shapes <- c(15, 16, 17, 18)
scatterplot3d(
x = data$num_projects,
y = data$num_students,
z = log(data$duration_ms),
pch = shapes[factor(data$proj_pref_type)],
color = colors_mechanism[factor(data$mechanism)]
#,zlim = c(0,15)
)
}
plotit(filter(data_all, num_slots == 1))
plotit(data_singleton)
plotit(data_p1)
plotit(data_p4)
plotit(data_r)
library(tidyverse)
data_all <- read_csv("../../../reports/runtimes_big.csv", col_types = cols(num_students = col_factor(), num_projects = col_factor(), proj_pref_type = col_factor()))
#unique(data_all$num_students)
for (pref_dist in levels(data_all$proj_pref_type)) {
data_filtered <- data_all %>% filter(num_students == 860 & proj_pref_type == pref_dist)
#print(data_filtered)
plot <- ggplot(data_filtered, aes(x = factor(num_slots), y = (duration_ms)), group = num_projects) +
geom_boxplot() +
geom_jitter(position=position_jitter(0.2)) +
facet_wrap(vars(num_projects)) +
ylim(0, 20000) +
labs(title = pref_dist)
print(plot)
}
data_all <-  read_csv("../../../reports/runtimes_big.csv", col_types = cols(num_students = col_factor(), num_projects = col_factor(), proj_pref_type = col_factor(), mechanism = col_factor()))
data_singleton <- data_all %>% filter(proj_pref_type == "singleton")
data_p1 <- data_all %>% filter(proj_pref_type == "linear_perturbed_1")
data_p4 <- data_all %>% filter(proj_pref_type == "linear_perturbed_4")
data_r <- data_all %>% filter(proj_pref_type == "random")
library(scatterplot3d)
plotit <- function(data) {
#colors <- c("#003f5c", "#58508d", "#bc5090", "#ff6361", "#ffa600")
colors = c("#003f5c" ,"#7a5195" ,"#ef5675" ,"#ffa600")
colors_mechanism = c("#7a5195", "#ffa600")
shapes <- c(15, 16, 17, 18)
scatterplot3d(
x = data$num_projects,
y = data$num_students,
z = log(data$duration_ms),
pch = shapes[factor(data$proj_pref_type)],
color = colors_mechanism[factor(data$mechanism)]
#,zlim = c(0,15)
)
}
plotit(filter(data_all, num_slots == 1))
plotit(data_singleton)
plotit(data_p1)
plotit(data_p4)
plotit(data_r)
library(tidyverse)
data_all <- read_csv("../../../reports/runtimes_big.csv", col_types = cols(num_students = col_factor(), num_projects = col_factor(), proj_pref_type = col_factor()))
#unique(data_all$num_students)
for (pref_dist in levels(data_all$proj_pref_type)) {
data_filtered <- data_all %>% filter(num_students == 860 & proj_pref_type == pref_dist)
#print(data_filtered)
plot <- ggplot(data_filtered, aes(x = factor(num_slots), y = (duration_ms)), group = num_projects) +
geom_boxplot() +
geom_jitter(position=position_jitter(0.2)) +
facet_wrap(vars(num_projects)) +
ylim(0, 20000) +
labs(title = pref_dist)
print(plot)
}
install.packages("plotly")
library(tidyverse)
data_all <-  read_csv("../../../reports/runtimes_big.csv", col_types = cols(num_students = col_factor(), num_projects = col_factor(), proj_pref_type = col_factor(), mechanism = col_factor()))
data_singleton <- data_all %>% filter(proj_pref_type == "singleton")
data_p1 <- data_all %>% filter(proj_pref_type == "linear_perturbed_1")
data_p4 <- data_all %>% filter(proj_pref_type == "linear_perturbed_4")
data_r <- data_all %>% filter(proj_pref_type == "random")
library(scatterplot3d)
plotit <- function(data) {
#colors <- c("#003f5c", "#58508d", "#bc5090", "#ff6361", "#ffa600")
colors = c("#003f5c" ,"#7a5195" ,"#ef5675" ,"#ffa600")
colors_mechanism = c("#7a5195", "#ffa600")
shapes <- c(15, 16, 17, 18)
scatterplot3d(
x = data$num_projects,
y = data$num_students,
z = log(data$duration_ms),
pch = shapes[factor(data$proj_pref_type)],
color = colors_mechanism[factor(data$mechanism)]
#,zlim = c(0,15)
)
}
plotit(filter(data_all, num_slots == 1))
plotit(data_singleton)
plotit(data_p1)
plotit(data_p4)
plotit(data_r)
library(tidyverse)
data_all <- read_csv("../../../reports/runtimes_big.csv", col_types = cols(num_students = col_factor(), num_projects = col_factor(), proj_pref_type = col_factor()))
#unique(data_all$num_students)
for (pref_dist in levels(data_all$proj_pref_type)) {
data_filtered <- data_all %>% filter(num_students == 860 & proj_pref_type == pref_dist)
#print(data_filtered)
plot <- ggplot(data_filtered, aes(x = factor(num_slots), y = (duration_ms)), group = num_projects) +
geom_boxplot() +
geom_jitter(position=position_jitter(0.2)) +
facet_wrap(vars(num_projects)) +
ylim(0, 20000) +
labs(title = pref_dist)
print(plot)
}
install.packages("plotly")
library(plotly)
fig <- plot_ly(data_all, x = num_projects, y = num_students, z = duration_ms, color = as.factor(mechanism), colors = colors_mechanism)
library(plotly)
fig <- plot_ly(data_all, x = ~num_projects, y = ~num_students, z = ~duration_ms, color = as.factor(mechanism), colors = colors_mechanism)
library(plotly)
fig <- plot_ly(data_all, x = ~num_projects, y = ~num_students, z = ~duration_ms, color = as.factor(~mechanism), colors = colors_mechanism)
library(plotly)
fig <- plot_ly(data_all, x = ~num_projects, y = ~num_students, z = ~duration_ms, color = factor(~mechanism), colors = colors_mechanism)
library(plotly)
fig <- plot_ly(data_all, x = ~num_projects, y = ~num_students, z = ~duration_ms, color = ~as.factor(mechanism), colors = colors_mechanism)
library(plotly)
fig <- plot_ly(data_all, x = ~num_projects, y = ~num_students, z = ~duration_ms, color = ~as.factor(mechanism), colors = colors_mechanism)
install.packages("plotly")
library(tidyverse)
data_all <-  read_csv("../../../reports/runtimes_big.csv", col_types = cols(num_students = col_factor(), num_projects = col_factor(), proj_pref_type = col_factor(), mechanism = col_factor()))
data_singleton <- data_all %>% filter(proj_pref_type == "singleton")
data_p1 <- data_all %>% filter(proj_pref_type == "linear_perturbed_1")
data_p4 <- data_all %>% filter(proj_pref_type == "linear_perturbed_4")
data_r <- data_all %>% filter(proj_pref_type == "random")
colors_mechanism = c("#7a5195", "#ffa600")
library(scatterplot3d)
plotit <- function(data) {
#colors <- c("#003f5c", "#58508d", "#bc5090", "#ff6361", "#ffa600")
colors = c("#003f5c" ,"#7a5195" ,"#ef5675" ,"#ffa600")
colors_mechanism = c("#7a5195", "#ffa600")
shapes <- c(15, 16, 17, 18)
scatterplot3d(
x = data$num_projects,
y = data$num_students,
z = log(data$duration_ms),
pch = shapes[factor(data$proj_pref_type)],
color = colors_mechanism[factor(data$mechanism)]
#,zlim = c(0,15)
)
}
plotit(filter(data_all, num_slots == 1))
plotit(data_singleton)
plotit(data_p1)
plotit(data_p4)
plotit(data_r)
library(tidyverse)
data_all <- read_csv("../../../reports/runtimes_big.csv", col_types = cols(num_students = col_factor(), num_projects = col_factor(), proj_pref_type = col_factor()))
#unique(data_all$num_students)
for (pref_dist in levels(data_all$proj_pref_type)) {
data_filtered <- data_all %>% filter(num_students == 860 & proj_pref_type == pref_dist)
#print(data_filtered)
plot <- ggplot(data_filtered, aes(x = factor(num_slots), y = (duration_ms)), group = num_projects) +
geom_boxplot() +
geom_jitter(position=position_jitter(0.2)) +
facet_wrap(vars(num_projects)) +
ylim(0, 20000) +
labs(title = pref_dist)
print(plot)
}
install.packages("plotly")
library(plotly)
fig <- plot_ly(data_all, x = ~num_projects, y = ~num_students, z = ~duration_ms, color = ~as.factor(mechanism), colors = colors_mechanism)
library(plotly)
fig <- plot_ly(data_all, x = ~num_projects, y = ~num_students, z = ~duration_ms, color = ~as.factor(mechanism), colors = colors_mechanism)
fig
library(plotly)
fig <- plot_ly(data_all, x = ~num_projects, y = ~num_students, z = ~duration_ms, color = ~as.factor(mechanism), colors = colors_mechanism)
fig <- fig %>% add_markers()
fix <- fig %>% layout(
scene = list(
xaxis = list(title = '# projects'),
yaxis = list(title = '# students'),
zaxis = list(title = 'duration (ms)', type = 'log')
),
)
library(tidyverse)
data_all <- read_csv("../../../reports/runtimes_big.csv", col_types = cols(num_students = col_factor(), num_projects = col_factor(), proj_pref_type = col_factor()))
#unique(data_all$num_students)
for (pref_dist in levels(data_all$proj_pref_type)) {
data_filtered <- data_all %>% filter(num_students == 860 & proj_pref_type == pref_dist)
#print(data_filtered)
plot <- ggplot(data_filtered, aes(x = factor(num_slots), y = (duration_ms)), group = num_projects) +
geom_boxplot() +
geom_jitter(position=position_jitter(0.2)) +
facet_wrap(vars(num_projects)) +
ylim(0, 20000) +
labs(title = pref_dist)
print(plot)
}
library(plotly)
fig <- plot_ly(data_all, x = ~num_projects, y = ~num_students, z = ~duration_ms, color = ~as.factor(mechanism), colors = colors_mechanism)
fig <- fig %>% add_markers()
fix <- fig %>% layout(scene = list(
xaxis = list(title = '# projects'),
yaxis = list(title = '# students'),
zaxis = list(title = 'duration (ms)', type = 'log')
),
)
library(plotly)
fig <- plot_ly(data_all, x = ~num_projects, y = ~num_students, z = ~duration_ms, color = ~as.factor(mechanism), colors = colors_mechanism)
fig <- fig %>% add_markers()
fix <- layout(fig, scene = list(
xaxis = list(title = '# projects'),
yaxis = list(title = '# students'),
zaxis = list(title = 'duration (ms)', type = 'log')
),
)
library(plotly)
fig <- plot_ly(data_all, x = ~num_projects, y = ~num_students, z = ~duration_ms, color = ~as.factor(mechanism), colors = colors_mechanism)
fig <- fig %>% add_markers()
fix <- layout(fig, scene = list(
xaxis = list(title = "# projects"),
yaxis = list(title = "# students"),
zaxis = list(title = "duration (ms)", type = "log")
)
)
fig
library(plotly)
fig <- plot_ly(data_all, x = ~num_projects, y = ~num_students, z = ~duration_ms, color = ~as.factor(mechanism), colors = colors_mechanism) %>%
add_markers() %>%
layout(
scene = list(
xaxis = list(title = "# projects"),
yaxis = list(title = "# students"),
zaxis = list(title = "duration (ms)", type = "log")
)
)
fig
library(plotly)
fig <- plot_ly(data_all, x = ~num_projects, y = ~num_students, z = ~duration_ms, color = ~as.factor(mechanism), colors = colors_mechanism) %>%
add_markers(size=1) %>%
layout(
scene = list(
xaxis = list(title = "# projects"),
yaxis = list(title = "# students"),
zaxis = list(title = "duration (ms)", type = "log")
)
)
fig
library(plotly)
plot_data <- function(data) {
fig <- plot_ly(data, x = ~num_projects, y = ~num_students, z = ~duration_ms, color = ~as.factor(mechanism), colors = colors_mechanism) %>%
add_markers(size=1) %>%
layout(
scene = list(
xaxis = list(title = "# projects"),
yaxis = list(title = "# students"),
zaxis = list(title = "duration (ms)", type = "log")
)
)
return(fig)
}
plot_data(data_all)
plot_data(data_singleton)
plot_data(data_p1)
plot_data(data_p4)
plot_data(data_r)
library(plotly)
plot_data <- function(data) {
fig <- plot_ly(data, x = ~num_projects, y = ~num_students, z = ~duration_ms / 100, color = ~as.factor(mechanism), colors = colors_mechanism) %>%
add_markers(size=1) %>%
layout(
scene = list(
xaxis = list(title = "# projects"),
yaxis = list(title = "# students"),
zaxis = list(title = "duration (sec)", type = "log")
)
)
return(fig)
}
plot_data(data_all)
plot_data(data_singleton)
plot_data(data_p1)
plot_data(data_p4)
plot_data(data_r)
library(plotly)
plot_data <- function(data) {
fig <- plot_ly(data, x = ~num_projects, y = ~num_students, z = ~(duration_ms / 1000), color = ~as.factor(mechanism), colors = colors_mechanism) %>%
add_markers(size=1) %>%
layout(
scene = list(
xaxis = list(title = "# projects"),
yaxis = list(title = "# students"),
zaxis = list(title = "duration (sec)", type = "log")
)
)
return(fig)
}
plot_data(data_all)
plot_data(data_singleton)
plot_data(data_p1)
plot_data(data_p4)
plot_data(data_r)
View(plotit)
